class Solution {
    public boolean isCousins(TreeNode root, int x, int y) {
        TreeNode xx=findNode(root,x);
        TreeNode yy=findNode(root,y);

        return (level(root,xx,0)==level(root,yy,0)&&!isSiblings(root,xx,yy));
        
    }
    TreeNode findNode(TreeNode root,int x){
        if(root==null){
            return null;
        }
        if(root.val==x){
            return root;
        }
        TreeNode n=findNode(root.left,x);
        if(n!=null){
            return n;
        }
        return findNode(root.right,x);
    }

    int level(TreeNode root,TreeNode xx,int lev){
        if(root==null){
            return 0;
        }
        if(root==xx){
            return lev;
        }
        int l=level(root.left,xx,lev+1);
        if(l!=0){
            return l;
        }
        return level(root.right,xx,lev+1);
    }

    boolean isSiblings(TreeNode root,TreeNode xx,TreeNode yy){
        if(root==null){
            return false;
        }

 return ((root.left==xx&&root.right==yy)||(root.right==xx&&root.left==yy)||isSiblings(root.left,xx,yy)||isSiblings(root.right,xx,yy));
    }
}
