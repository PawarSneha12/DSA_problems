BFS

class Solution {
    public boolean isSymmetric(TreeNode root) {
        if(root==null){
            return true;
        }
        Queue<TreeNode> q=new LinkedList<>();
        q.offer(root.left);
        q.offer(root.right);
        while(!q.isEmpty()){
            TreeNode l=q.poll();
            TreeNode r=q.poll();
            if(l==null&&r==null){
                continue;
            }
            if(l==null||r==null){
              return false;
            }
            if(l.val!=r.val){
                return false;
            }
            q.add(l.left);
            q.add(r.right);
            q.add(l.right);
            q.add(r.left);
        }
return true;

    }

}

/////////
    public boolean isSymmetric(TreeNode root) {
        if(root==null){
            return true;
        }
        return isSame(root.left,root.right);
       
    }
public boolean isSame(TreeNode r1,TreeNode r2){
    if(r1==null||r2==null){
        return r1==r2;
    }
    return r1.val==r2.val && isSame(r1.left,r2.right)&&isSame(r1.right,r2.left);
}

