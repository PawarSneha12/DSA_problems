leetcode 238.

1) using the division operation.
class Solution {
    public int[] productExceptSelf(int[] nums) {
        //int [] arr=new int[nums.length];
        int countZero=0;
        int product=1;
        for(int i=0;i<nums.length;i++){
            if(nums[i]==0){
                countZero++;
               }
            else{
            product=product*nums[i];
            }}
        if(countZero==0){
            for(int j=0;j<nums.length;j++){
            nums[j]=product/nums[j]; }
              }
        else if(countZero==1){
        for(int j=0;j<nums.length;j++){
            if(nums[j]==0){
           nums[j]=product;
            }
            else
            {
                nums[j]=0;
            }
            }}
            else{
                  for(int j=0;j<nums.length;j++){
           nums[j]=0;
            }
            } return nums;
        }}


2)) Using prefix and suffix
//prefix : in which we put the product of all element before of  currect element // here we stared loop from 0 to n-1
//suffix : in which we put the product of all element after of  currect element // here from n-1 to 0

   public int[] productExceptSelf(int[] nums) {
        int [] ans=new int[nums.length];
        int temp=1;
        for(int i=0;i<nums.length;i++){
            ans[i]=temp;
            temp*=nums[i];
        }
        temp=1;
        for(int i= nums.length-1;i>=0;i--){
            ans[i]*=temp;
            temp*=nums[i];
        }
        
       
        return ans;
        }
}
