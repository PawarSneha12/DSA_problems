//leetcode 143
//here 
//1. find mid 
//the reverse from mid to end 
//first head e to first mid element

class Solution {
    public void reorderList(ListNode head) {
        ListNode mid=middle(head);
        ListNode Srev=reverse(mid);
        ListNode Fh=head;
        while(Srev!=null&&Fh!=null){
            ListNode temp=Fh.next;
            Fh.next=Srev;
            Fh=temp;
            
            temp=Srev.next;
            Srev.next=Fh;
            Srev=temp;
        }
        //next of tail to null
       if(Fh!=null) {
            Fh.next=null;
        }        
        
    }
        
        
        
        public ListNode reverse(ListNode node){
            if(node==null){
                return node;
            }
            ListNode prev=null;
            ListNode curr=node;
            ListNode Next=curr.next;
            while(curr!=null){
                curr.next=prev;
                prev=curr;
                curr=Next;
                if(Next!=null){
                    Next=Next.next;
                }
            }
            return prev;
            
        }
        
    public ListNode middle(ListNode node){
      ListNode slow=node;
      ListNode fast=node;
        while(fast!=null&&fast.next!=null){
            slow=slow.next;
            fast=fast.next.next;
             }
        return slow;
    }
    
    
    
}
